{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\halli\\\\Desktop\\\\Lambda VSC\\\\Projects\\\\User-Onboarding\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport User from './User';\nimport Form from './Form';\nimport axios from 'axios';\nimport formSchema from './formSchema';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormValues = {\n  name: '',\n  email: '',\n  passord: '',\n  Agree: false,\n  Disagree: false,\n  Skip: false\n};\nconst initialFormErrors = {\n  name: '',\n  email: '',\n  passord: '',\n  Agree: false,\n  Disagree: false,\n  Skip: false\n};\nconst initialUsers = [];\nconst initialDisabled = true;\nexport default function App() {\n  _s();\n\n  const [users, setUsers] = useState(initialUsers);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormValues);\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n  const createNewUser = newUser => {\n    axios.post('https://reqres.in/api/users', newUser).then(res => {\n      setUsers([res.data, ...users]);\n    }).catch(err => {\n      console.log(err);\n    });\n    setFormValues(initialFormValues);\n  };\n\n  const inputChange = (name, value) => {\n    yup.reach(formSchema, name).validate(value).then(() => {\n      setFormErrors({ ...formErrors,\n        [name]: ''\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const formSubmit = () => {\n    const newUser = {\n      name: formValues.name.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n      TermsOfService: ['Agree', 'Disagree', 'Skip'].filter(term => formValues[term])\n    };\n    createNewUser(newUser);\n  };\n\n  useEffect(() => {\n    formSchema.isValid(formValues).then(valid => setDisabled(!valid));\n  }, [formValues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Onboarding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      values: formValues,\n      change: inputChange,\n      submit: formSubmit,\n      disabled: disabled,\n      errors: formErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), users.map(user => {\n      return /*#__PURE__*/_jsxDEV(User, {\n        details: user\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qCXzm/TCpST3w5aM5XTKwbc9obI=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/halli/Desktop/Lambda VSC/Projects/User-Onboarding/src/App.js"],"names":["React","useState","useEffect","User","Form","axios","formSchema","yup","initialFormValues","name","email","passord","Agree","Disagree","Skip","initialFormErrors","initialUsers","initialDisabled","App","users","setUsers","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","createNewUser","newUser","post","then","res","data","catch","err","console","log","inputChange","value","reach","validate","errors","formSubmit","trim","password","TermsOfService","filter","term","isValid","valid","map","user","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css';\nimport User from './User'\nimport Form from './Form'\nimport axios from 'axios'\nimport formSchema from './formSchema'\nimport * as yup from 'yup'\n\nconst initialFormValues = {\n  name: '',\n  email: '', \n  passord: '',\n\n  Agree: false,\n  Disagree: false,\n  Skip: false\n}\n\nconst initialFormErrors = {\n  name: '',\n  email: '', \n  passord: '',\n\n  Agree: false,\n  Disagree: false,\n  Skip: false\n}\n\nconst initialUsers = []\nconst initialDisabled = true\n\nexport default function App() {\n  const [users, setUsers] = useState(initialUsers)\n  const [formValues, setFormValues] = useState(initialFormValues)\n  const [formErrors, setFormErrors] = useState(initialFormValues)\n  const [disabled, setDisabled] = useState(initialDisabled)\n  const createNewUser = newUser =>{\n    axios.post('https://reqres.in/api/users', newUser)\n    .then(res => {\n      setUsers([res.data, ...users])\n    })\n    .catch(err => {\n      console.log(err);\n    })\n    setFormValues(initialFormValues)\n  }\n\n  const inputChange = (name, value) => {\n    yup.reach(formSchema, name)\n    .validate(value)\n    .then(() => {\n      setFormErrors({...formErrors, [name]: ''})\n    })\n    .catch(err => {\n      setFormErrors({...formErrors, [name]: err.errors[0]})\n    })\n    setFormValues({\n      ...formValues,\n      [name]: value\n    })\n  }\n\n  const formSubmit = () => {\n    const newUser = {\n      name: formValues.name.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n      TermsOfService: ['Agree', 'Disagree', 'Skip'].filter(term => formValues[term])\n    }\n    createNewUser(newUser)\n  }\n\n  useEffect(() => {\n    formSchema.isValid(formValues).then(valid => setDisabled(!valid))\n  }, [formValues])\n\n  return (\n    <div className='container'>\n      <header><h1>User Onboarding</h1></header>\n\n      <Form\n        values={formValues}\n        change={inputChange}\n        submit={formSubmit}\n        disabled={disabled}\n        errors={formErrors} />\n\n        {users.map(user => {\n          return (\n            <User key={user.id} details={user} />\n          )\n        })}\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}